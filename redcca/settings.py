"""
Django settings for redcca project.

Generated by 'django-admin startproject' using Django 3.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os

from environs import Env

env = Env()
env.read_env()

PRODUCT_AGENCY = 'CONACYT'
PRODUCT_AGENCY_DESCRIPTION = 'Consejo Nacional de Ciencia y Tecnología'
PRODUCT_OU = 'redcca'
PRODUCT_SHORT_NAME = 'redcca'
PRODUCT_LONG_NAME = 'RED DE CÓMPUTO CIENTÍFICO DE ALTO RENDIMIENTO'
PRODUCT_VERSION = '1.0'
PRODUCT_CONTACT_EMAIL = "sergio.navarrete@infotec.mx"
TERMS_OF_SERVICE_URL = ("https://miic.conacyt.mx/becas/acceso.html")
HOSTNAME = env.str('HOSTNAME', default='unknown')

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool('DEBUG', default=False)

# Variable de entorno para ocultar el administrador de django
ADMIN_ENABLED = env.bool('ADMIN_ENABLED', default=True)

# SECURITY WARNING: keep the secret key used in production secret!
if DEBUG:
    SECRET_KEY = env.str(
        'SECRET_KEY', default='django-insecure-94e57m#x3*8z&6^^*yf!#vkok6abqm3#*s#7#*isw-pq!8f4x@')
else:
    SECRET_KEY = env.str('SECRET_KEY')


ALLOWED_HOSTS = env.list('ALLOWED_HOSTS', default=[])
CORS_ORIGIN_ALLOW_ALL = env.bool("CORS_ORIGIN_ALLOW_ALL", default=DEBUG)
CORS_ORIGIN_WHITELIST = env.list("CORS_ORIGIN_WHITELIST", default=[])

CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'access-control-allow-origin',
    'x-frame-options'
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework_swagger',
    'drf_yasg',
    'api.server',
    'api.investigator',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'redcca.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [Path.joinpath(BASE_DIR / 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'redcca.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

RUNNING_UNIT_TESTS = 'test' in os.sys.argv
RUNNING_COLLECTSTATIC = 'collectstatic' in os.sys.argv

if RUNNING_UNIT_TESTS or RUNNING_COLLECTSTATIC:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    }
else:
    REDCCA_DB_NAME = env.str('REDCCA_DB_NAME')
    REDCCA_DB_USER = env.str('REDCCA_DB_USER')
    REDCCA_DB_PASSWORD = env.str('REDCCA_DB_PASSWORD')
    REDCCA_DB_HOST = env.str('REDCCA_DB_HOST')
    REDCCA_DB_PORT = env.int('REDCCA_DB_PORT', default=5432)

    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': REDCCA_DB_NAME,
            'USER': REDCCA_DB_USER,
            'PASSWORD': REDCCA_DB_PASSWORD,
            'HOST': REDCCA_DB_HOST,
            'PORT': REDCCA_DB_PORT
        }
    }


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'es-mx'

TIME_ZONE = 'America/Mexico_City'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = 'static/'
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'Bearer': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header',
            'prefix': 'bearer '
        }
    }
}

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


if not DEBUG:
    EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
    EMAIL_USE_TLS = env.bool('EMAIL_USE_TLS')
    EMAIL_USE_SSL = env.bool('EMAIL_USE_SSL')
    EMAIL_HOST = env.str('EMAIL_HOST')
    EMAIL_HOST_USER = env.str('EMAIL_HOST_USER')
    EMAIL_HOST_PASSWORD = env.str('EMAIL_HOST_PASSWORD')
    EMAIL_PORT = env.int('EMAIL_PORT')

else:
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

